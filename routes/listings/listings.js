const express = require('express');
const router = express.Router();
const FoodListing = require("../../models").FoodListing;
const Host = require("../../models").Host;

router.post("/createHost", async (req, res) => { // POST a new host before creating a food listing
    const {
        userID,
        username,
        email,
        password,
        contactNum,
        address,
        emailVerified,
        favCuisine,
        mealsMatched,
        foodRating,
        hygieneGrade,
        paymentImage
    } = req.body;

    try {
        const newHost = await Host.create({
            userID,
            username,
            email,
            password,
            contactNum,
            address,
            emailVerified: emailVerified || false,
            favCuisine,
            mealsMatched: mealsMatched || 0,
            foodRating: foodRating || null,
            hygieneGrade: hygieneGrade || null,
            paymentImage
        });

        res.json({ message: 'Host created successfully!', newHost });
    } catch (error) {
        console.error('Error creating host:', error);
        res.status(500).json({ error: 'Internal server error' });
    }
});

router.get("/", async (req, res) => { // GET all food listings
    try {
        const foodListings = await FoodListing.findAll();
        res.json(foodListings);
    } catch (error) {
        console.error('Error retrieving food listings:', error);
        res.status(500).json({ error: 'Internal server error' });
    }
})

router.post("/", async (req, res) => { // POST a new food listing
    const {
        listingID,
        title,
        images,
        shortDescription,
        longDescription,
        portionPrice,
        approxAddress,
        address,
        totalSlots,
        datetime,
        published,
        hostID
    } = req.body;

    try {

        const newFoodListing = await FoodListing.create({
            listingID,
            title,
            images,
            shortDescription,
            longDescription,
            portionPrice,
            approxAddress,
            address,
            totalSlots,
            datetime,
            published,
            hostID
        });

        res.json({ message: 'Food listing created successfully!', newFoodListing });
    } catch (error) {
        console.error('Error creating food listing:', error);
        res.status(500).json({ error: 'Internal server error' });
    }
});

// Images are (temporarily) placeholder data generated by Postman


module.exports = router;